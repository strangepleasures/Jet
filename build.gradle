buildscript {
    ext.kotlin_version = '1.4.10'
    ext.antlr_version = '4.9'
    ext.ikonli_version = '12.0.0'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'antlr'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    antlr "org.antlr:antlr4:$antlr_version"
    implementation "org.antlr:antlr4-runtime:$antlr_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.fifesoft:rsyntaxtextarea:3.1.1"
    implementation "org.kordamp.ikonli:ikonli-swing:$ikonli_version"
    implementation "org.kordamp.ikonli:ikonli-antdesignicons-pack:$ikonli_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'junit:junit:4.13'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

generateGrammarSource {
    //maxHeapSize = "64m"
    arguments += ['-package', 'com.jetbrains.jet.engine']
    outputDirectory = new File("generated-src/antlr/main/com/jetbrains/jet/engine".toString())
}

compileKotlin {
    dependsOn generateGrammarSource
    kotlinOptions.jvmTarget = 1.8
}

compileTestKotlin {
    kotlinOptions.jvmTarget = 1.8
}

application {
    mainClassName = "com.jetbrains.jet.ide.IDEKt"
}

sourceSets {
    main {
        java.srcDir 'generated-src/antlr/main/'
    }
}

clean {
    delete "generated-src"
}

